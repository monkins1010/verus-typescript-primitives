import { PartialIdentity } from '../../../pbaas/PartialIdentity';
import { PartialSignData, PartialSignDataCLIJson, PartialSignDataJson } from '../../../pbaas/PartialSignData';
import { BigNumber } from '../../../utils/types/BigNumber';
import { ContentMultiMapJsonValue, IdentityID, VerusCLIVerusIDJson, VerusCLIVerusIDJsonBase } from '../../../pbaas';
import { ResponseUri, ResponseUriJson } from '../ResponseUri';
import { SerializableEntity } from '../../../utils/types/SerializableEntity';
export type SignDataMap = Map<string, PartialSignData>;
export type VerusCLIVerusIDJsonWithData = VerusCLIVerusIDJsonBase<{
    [key: string]: ContentMultiMapJsonValue | {
        data: PartialSignDataCLIJson;
    };
}>;
export type IdentityUpdateRequestDetailsJson = {
    flags?: string;
    requestid?: string;
    createdat?: string;
    identity?: VerusCLIVerusIDJson;
    expiryheight?: string;
    systemid?: string;
    responseuris?: Array<ResponseUriJson>;
    signdatamap?: {
        [key: string]: PartialSignDataJson;
    };
    salt?: string;
    txid?: string;
};
export declare class IdentityUpdateRequestDetails implements SerializableEntity {
    flags?: BigNumber;
    requestid?: BigNumber;
    createdat?: BigNumber;
    identity?: PartialIdentity;
    expiryheight?: BigNumber;
    systemid?: IdentityID;
    responseuris?: Array<ResponseUri>;
    signdatamap?: SignDataMap;
    salt?: Buffer;
    txid?: Buffer;
    static IDENTITY_UPDATE_REQUEST_VALID: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_CONTAINS_SIGNDATA: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_EXPIRES: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_CONTAINS_RESPONSE_URIS: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_CONTAINS_SYSTEM: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_CONTAINS_TXID: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_CONTAINS_SALT: import("bn.js");
    static IDENTITY_UPDATE_REQUEST_IS_TESTNET: import("bn.js");
    constructor(data?: {
        flags?: BigNumber;
        requestid?: BigNumber;
        createdat?: BigNumber;
        identity?: PartialIdentity;
        expiryheight?: BigNumber;
        systemid?: IdentityID;
        txid?: Buffer;
        responseuris?: Array<ResponseUri>;
        signdatamap?: SignDataMap;
        salt?: Buffer;
    });
    expires(): boolean;
    containsSignData(): boolean;
    containsSystem(): boolean;
    containsTxid(): boolean;
    containsResponseUris(): boolean;
    containsSalt(): boolean;
    isTestnet(): boolean;
    toggleExpires(): void;
    toggleContainsSignData(): void;
    toggleContainsSystem(): void;
    toggleContainsTxid(): void;
    toggleContainsResponseUris(): void;
    toggleContainsSalt(): void;
    toggleIsTestnet(): void;
    toSha256(): Buffer<ArrayBufferLike>;
    getIdentityAddress(): string;
    getByteLength(): number;
    toBuffer(): Buffer<ArrayBufferLike>;
    fromBuffer(buffer: Buffer, offset?: number, parseVdxfObjects?: boolean): number;
    toJson(): IdentityUpdateRequestDetailsJson;
    static fromJson(json: IdentityUpdateRequestDetailsJson): IdentityUpdateRequestDetails;
    toCLIJson(): VerusCLIVerusIDJsonWithData;
    static fromCLIJson(json: VerusCLIVerusIDJsonWithData, details?: IdentityUpdateRequestDetailsJson): IdentityUpdateRequestDetails;
}
